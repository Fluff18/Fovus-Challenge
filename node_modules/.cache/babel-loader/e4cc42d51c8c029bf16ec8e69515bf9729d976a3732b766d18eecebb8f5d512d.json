{"ast":null,"code":"// Generated by CoffeeScript 1.9.1\n(function () {\n  var XMLDTDNotation, create;\n  create = require('lodash/create');\n  module.exports = XMLDTDNotation = function () {\n    function XMLDTDNotation(parent, name, value) {\n      this.stringify = parent.stringify;\n      if (name == null) {\n        throw new Error(\"Missing notation name\");\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity\");\n      }\n      this.name = this.stringify.eleName(name);\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n    XMLDTDNotation.prototype.toString = function (options, level) {\n      var indent, newline, offset, pretty, r, ref, ref1, ref2, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (ref = options != null ? options.indent : void 0) != null ? ref : '  ';\n      offset = (ref1 = options != null ? options.offset : void 0) != null ? ref1 : 0;\n      newline = (ref2 = options != null ? options.newline : void 0) != null ? ref2 : '\\n';\n      level || (level = 0);\n      space = new Array(level + offset + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      r += '<!NOTATION ' + this.name;\n      if (this.pubID && this.sysID) {\n        r += ' PUBLIC \"' + this.pubID + '\" \"' + this.sysID + '\"';\n      } else if (this.pubID) {\n        r += ' PUBLIC \"' + this.pubID + '\"';\n      } else if (this.sysID) {\n        r += ' SYSTEM \"' + this.sysID + '\"';\n      }\n      r += '>';\n      if (pretty) {\n        r += newline;\n      }\n      return r;\n    };\n    return XMLDTDNotation;\n  }();\n}).call(this);","map":{"version":3,"names":["XMLDTDNotation","create","require","module","exports","parent","name","value","stringify","Error","pubID","sysID","eleName","dtdPubID","dtdSysID","prototype","toString","options","level","indent","newline","offset","pretty","r","ref","ref1","ref2","space","Array","join","call"],"sources":["/Users/luminosity/Desktop/Fovus/node_modules/xmlbuilder/lib/XMLDTDNotation.js"],"sourcesContent":["// Generated by CoffeeScript 1.9.1\n(function() {\n  var XMLDTDNotation, create;\n\n  create = require('lodash/create');\n\n  module.exports = XMLDTDNotation = (function() {\n    function XMLDTDNotation(parent, name, value) {\n      this.stringify = parent.stringify;\n      if (name == null) {\n        throw new Error(\"Missing notation name\");\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity\");\n      }\n      this.name = this.stringify.eleName(name);\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    XMLDTDNotation.prototype.toString = function(options, level) {\n      var indent, newline, offset, pretty, r, ref, ref1, ref2, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (ref = options != null ? options.indent : void 0) != null ? ref : '  ';\n      offset = (ref1 = options != null ? options.offset : void 0) != null ? ref1 : 0;\n      newline = (ref2 = options != null ? options.newline : void 0) != null ? ref2 : '\\n';\n      level || (level = 0);\n      space = new Array(level + offset + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      r += '<!NOTATION ' + this.name;\n      if (this.pubID && this.sysID) {\n        r += ' PUBLIC \"' + this.pubID + '\" \"' + this.sysID + '\"';\n      } else if (this.pubID) {\n        r += ' PUBLIC \"' + this.pubID + '\"';\n      } else if (this.sysID) {\n        r += ' SYSTEM \"' + this.sysID + '\"';\n      }\n      r += '>';\n      if (pretty) {\n        r += newline;\n      }\n      return r;\n    };\n\n    return XMLDTDNotation;\n\n  })();\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}