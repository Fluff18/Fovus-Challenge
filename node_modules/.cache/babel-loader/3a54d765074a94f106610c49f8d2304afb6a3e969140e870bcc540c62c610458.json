{"ast":null,"code":"var util = require('../util');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\nfunction buildRequest(req) {\n  var httpRequest = req.httpRequest;\n  var api = req.service.api;\n  var target = api.targetPrefix + '.' + api.operations[req.operation].name;\n  var version = api.jsonVersion || '1.0';\n  var input = api.operations[req.operation].input;\n  var builder = new JsonBuilder();\n  if (version === 1) version = '1.0';\n  httpRequest.body = builder.build(req.params || {}, input);\n  httpRequest.headers['Content-Type'] = 'application/x-amz-json-' + version;\n  httpRequest.headers['X-Amz-Target'] = target;\n}\nfunction extractError(resp) {\n  var error = {};\n  var httpResponse = resp.httpResponse;\n  error.code = httpResponse.headers['x-amzn-errortype'] || 'UnknownError';\n  if (typeof error.code === 'string') {\n    error.code = error.code.split(':')[0];\n  }\n  if (httpResponse.body.length > 0) {\n    try {\n      var e = JSON.parse(httpResponse.body.toString());\n      if (e.__type || e.code) {\n        error.code = (e.__type || e.code).split('#').pop();\n      }\n      if (error.code === 'RequestEntityTooLarge') {\n        error.message = 'Request body must be less than 1 MB';\n      } else {\n        error.message = e.message || e.Message || null;\n      }\n    } catch (e) {\n      error.statusCode = httpResponse.statusCode;\n      error.message = httpResponse.statusMessage;\n    }\n  } else {\n    error.statusCode = httpResponse.statusCode;\n    error.message = httpResponse.statusCode.toString();\n  }\n  resp.error = util.error(new Error(), error);\n}\nfunction extractData(resp) {\n  var body = resp.httpResponse.body.toString() || '{}';\n  if (resp.request.service.config.convertResponseTypes === false) {\n    resp.data = JSON.parse(body);\n  } else {\n    var operation = resp.request.service.api.operations[resp.request.operation];\n    var shape = operation.output || {};\n    var parser = new JsonParser();\n    resp.data = parser.parse(body, shape);\n  }\n}\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};","map":{"version":3,"names":["util","require","JsonBuilder","JsonParser","buildRequest","req","httpRequest","api","service","target","targetPrefix","operations","operation","name","version","jsonVersion","input","builder","body","build","params","headers","extractError","resp","error","httpResponse","code","split","length","e","JSON","parse","toString","__type","pop","message","Message","statusCode","statusMessage","Error","extractData","request","config","convertResponseTypes","data","shape","output","parser","module","exports"],"sources":["/Users/luminosity/Desktop/Fovus/node_modules/aws-sdk/lib/protocol/json.js"],"sourcesContent":["var util = require('../util');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\n\nfunction buildRequest(req) {\n  var httpRequest = req.httpRequest;\n  var api = req.service.api;\n  var target = api.targetPrefix + '.' + api.operations[req.operation].name;\n  var version = api.jsonVersion || '1.0';\n  var input = api.operations[req.operation].input;\n  var builder = new JsonBuilder();\n\n  if (version === 1) version = '1.0';\n  httpRequest.body = builder.build(req.params || {}, input);\n  httpRequest.headers['Content-Type'] = 'application/x-amz-json-' + version;\n  httpRequest.headers['X-Amz-Target'] = target;\n}\n\nfunction extractError(resp) {\n  var error = {};\n  var httpResponse = resp.httpResponse;\n\n  error.code = httpResponse.headers['x-amzn-errortype'] || 'UnknownError';\n  if (typeof error.code === 'string') {\n    error.code = error.code.split(':')[0];\n  }\n\n  if (httpResponse.body.length > 0) {\n    try {\n      var e = JSON.parse(httpResponse.body.toString());\n      if (e.__type || e.code) {\n        error.code = (e.__type || e.code).split('#').pop();\n      }\n      if (error.code === 'RequestEntityTooLarge') {\n        error.message = 'Request body must be less than 1 MB';\n      } else {\n        error.message = (e.message || e.Message || null);\n      }\n    } catch (e) {\n      error.statusCode = httpResponse.statusCode;\n      error.message = httpResponse.statusMessage;\n    }\n  } else {\n    error.statusCode = httpResponse.statusCode;\n    error.message = httpResponse.statusCode.toString();\n  }\n\n  resp.error = util.error(new Error(), error);\n}\n\nfunction extractData(resp) {\n  var body = resp.httpResponse.body.toString() || '{}';\n  if (resp.request.service.config.convertResponseTypes === false) {\n    resp.data = JSON.parse(body);\n  } else {\n    var operation = resp.request.service.api.operations[resp.request.operation];\n    var shape = operation.output || {};\n    var parser = new JsonParser();\n    resp.data = parser.parse(body, shape);\n  }\n}\n\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}