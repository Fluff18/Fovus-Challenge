{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sha1 = void 0;\nvar ie11Sha1_1 = require(\"./ie11Sha1\");\nvar webCryptoSha1_1 = require(\"./webCryptoSha1\");\nvar supports_web_crypto_1 = require(\"@aws-crypto/supports-web-crypto\");\nvar ie11_detection_1 = require(\"@aws-crypto/ie11-detection\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar util_1 = require(\"@aws-crypto/util\");\nvar Sha1 = /** @class */function () {\n  function Sha1(secret) {\n    if ((0, supports_web_crypto_1.supportsWebCrypto)((0, util_locate_window_1.locateWindow)())) {\n      this.hash = new webCryptoSha1_1.Sha1(secret);\n    } else if ((0, ie11_detection_1.isMsWindow)((0, util_locate_window_1.locateWindow)())) {\n      this.hash = new ie11Sha1_1.Sha1(secret);\n    } else {\n      throw new Error(\"SHA1 not supported\");\n    }\n  }\n  Sha1.prototype.update = function (data, encoding) {\n    this.hash.update((0, util_1.convertToBuffer)(data));\n  };\n  Sha1.prototype.digest = function () {\n    return this.hash.digest();\n  };\n  Sha1.prototype.reset = function () {\n    this.hash.reset();\n  };\n  return Sha1;\n}();\nexports.Sha1 = Sha1;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;EAGE,cAAYA,MAAmB;IAC7B,IAAI,2CAAiB,EAAC,qCAAY,GAAE,CAAC,EAAE;MACrC,IAAI,CAACC,IAAI,GAAG,IAAIC,oBAAa,CAACF,MAAM,CAAC;KACtC,MAAM,IAAI,+BAAU,EAAC,qCAAY,GAAE,CAAC,EAAE;MACrC,IAAI,CAACC,IAAI,GAAG,IAAIE,eAAQ,CAACH,MAAM,CAAC;KACjC,MAAM;MACL,MAAM,IAAII,KAAK,CAAC,oBAAoB,CAAC;;EAEzC;EAEAC,qBAAM,GAAN,UAAOC,IAAgB,EAAEC,QAAsC;IAC7D,IAAI,CAACN,IAAI,CAACO,MAAM,CAAC,0BAAe,EAACF,IAAI,CAAC,CAAC;EACzC,CAAC;EAEDD,qBAAM,GAAN;IACE,OAAO,IAAI,CAACJ,IAAI,CAACQ,MAAM,EAAE;EAC3B,CAAC;EAEDJ,oBAAK,GAAL;IACE,IAAI,CAACJ,IAAI,CAACS,KAAK,EAAE;EACnB,CAAC;EACH,WAAC;AAAD,CAAC,EAxBD;AAAaC","names":["secret","hash","webCryptoSha1_1","ie11Sha1_1","Error","Sha1","data","encoding","update","digest","reset","exports"],"sources":["/Users/luminosity/Desktop/Fovus/node_modules/@aws-crypto/sha1-browser/src/crossPlatformSha1.ts"],"sourcesContent":["import { Sha1 as Ie11Sha1 } from \"./ie11Sha1\";\nimport { Sha1 as WebCryptoSha1 } from \"./webCryptoSha1\";\nimport { Checksum, SourceData } from \"@aws-sdk/types\";\nimport { supportsWebCrypto } from \"@aws-crypto/supports-web-crypto\";\nimport { isMsWindow } from \"@aws-crypto/ie11-detection\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\nimport { convertToBuffer } from \"@aws-crypto/util\";\n\nexport class Sha1 implements Checksum {\n  private hash: Checksum;\n\n  constructor(secret?: SourceData) {\n    if (supportsWebCrypto(locateWindow())) {\n      this.hash = new WebCryptoSha1(secret);\n    } else if (isMsWindow(locateWindow())) {\n      this.hash = new Ie11Sha1(secret);\n    } else {\n      throw new Error(\"SHA1 not supported\");\n    }\n  }\n\n  update(data: SourceData, encoding?: \"utf8\" | \"ascii\" | \"latin1\"): void {\n    this.hash.update(convertToBuffer(data));\n  }\n\n  digest(): Promise<Uint8Array> {\n    return this.hash.digest();\n  }\n\n  reset(): void {\n    this.hash.reset();\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}