{"ast":null,"code":"// Generated by CoffeeScript 1.9.1\n(function () {\n  var XMLComment,\n    XMLNode,\n    create,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  create = require('lodash/create');\n  XMLNode = require('./XMLNode');\n  module.exports = XMLComment = function (superClass) {\n    extend(XMLComment, superClass);\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text\");\n      }\n      this.text = this.stringify.comment(text);\n    }\n    XMLComment.prototype.clone = function () {\n      return create(XMLComment.prototype, this);\n    };\n    XMLComment.prototype.toString = function (options, level) {\n      var indent, newline, offset, pretty, r, ref, ref1, ref2, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (ref = options != null ? options.indent : void 0) != null ? ref : '  ';\n      offset = (ref1 = options != null ? options.offset : void 0) != null ? ref1 : 0;\n      newline = (ref2 = options != null ? options.newline : void 0) != null ? ref2 : '\\n';\n      level || (level = 0);\n      space = new Array(level + offset + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      r += '<!-- ' + this.text + ' -->';\n      if (pretty) {\n        r += newline;\n      }\n      return r;\n    };\n    return XMLComment;\n  }(XMLNode);\n}).call(this);","map":{"version":3,"names":["XMLComment","XMLNode","create","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","text","Error","stringify","comment","clone","toString","options","level","indent","newline","offset","pretty","r","ref","ref1","ref2","space","Array","join"],"sources":["/Users/luminosity/Desktop/Fovus/node_modules/xmlbuilder/lib/XMLComment.js"],"sourcesContent":["// Generated by CoffeeScript 1.9.1\n(function() {\n  var XMLComment, XMLNode, create,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  create = require('lodash/create');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text\");\n      }\n      this.text = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return create(XMLComment.prototype, this);\n    };\n\n    XMLComment.prototype.toString = function(options, level) {\n      var indent, newline, offset, pretty, r, ref, ref1, ref2, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (ref = options != null ? options.indent : void 0) != null ? ref : '  ';\n      offset = (ref1 = options != null ? options.offset : void 0) != null ? ref1 : 0;\n      newline = (ref2 = options != null ? options.newline : void 0) != null ? ref2 : '\\n';\n      level || (level = 0);\n      space = new Array(level + offset + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      r += '<!-- ' + this.text + ' -->';\n      if (pretty) {\n        r += newline;\n      }\n      return r;\n    };\n\n    return XMLComment;\n\n  })(XMLNode);\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}