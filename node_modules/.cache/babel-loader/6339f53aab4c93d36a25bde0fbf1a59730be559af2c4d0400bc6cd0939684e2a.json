{"ast":null,"code":"var AWS = require('./core');\nvar Api = require('./model/api');\nvar regionConfig = require('./region_config');\nvar inherit = AWS.util.inherit;\nvar clientCount = 0;\n\n/**\n * The service class representing an AWS service.\n *\n * @abstract\n *\n * @!attribute apiVersions\n *   @return [Array<String>] the list of API versions supported by this service.\n *   @readonly\n */\nAWS.Service = inherit({\n  /**\n   * Create a new service object with a configuration object\n   *\n   * @param config [map] a map of configuration options\n   */\n  constructor: function Service(config) {\n    if (!this.loadServiceClass) {\n      throw AWS.util.error(new Error(), 'Service must be constructed with `new\\' operator');\n    }\n    var ServiceClass = this.loadServiceClass(config || {});\n    if (ServiceClass) {\n      var originalConfig = AWS.util.copy(config);\n      var svc = new ServiceClass(config);\n      Object.defineProperty(svc, '_originalConfig', {\n        get: function () {\n          return originalConfig;\n        },\n        enumerable: false,\n        configurable: true\n      });\n      svc._clientId = ++clientCount;\n      return svc;\n    }\n    this.initialize(config);\n  },\n  /**\n   * @api private\n   */\n  initialize: function initialize(config) {\n    var svcConfig = AWS.config[this.serviceIdentifier];\n    this.config = new AWS.Config(AWS.config);\n    if (svcConfig) this.config.update(svcConfig, true);\n    if (config) this.config.update(config, true);\n    this.validateService();\n    if (!this.config.endpoint) regionConfig(this);\n    this.config.endpoint = this.endpointFromTemplate(this.config.endpoint);\n    this.setEndpoint(this.config.endpoint);\n  },\n  /**\n   * @api private\n   */\n  validateService: function validateService() {},\n  /**\n   * @api private\n   */\n  loadServiceClass: function loadServiceClass(serviceConfig) {\n    var config = serviceConfig;\n    if (!AWS.util.isEmpty(this.api)) {\n      return null;\n    } else if (config.apiConfig) {\n      return AWS.Service.defineServiceApi(this.constructor, config.apiConfig);\n    } else if (!this.constructor.services) {\n      return null;\n    } else {\n      config = new AWS.Config(AWS.config);\n      config.update(serviceConfig, true);\n      var version = config.apiVersions[this.constructor.serviceIdentifier];\n      version = version || config.apiVersion;\n      return this.getLatestServiceClass(version);\n    }\n  },\n  /**\n   * @api private\n   */\n  getLatestServiceClass: function getLatestServiceClass(version) {\n    version = this.getLatestServiceVersion(version);\n    if (this.constructor.services[version] === null) {\n      AWS.Service.defineServiceApi(this.constructor, version);\n    }\n    return this.constructor.services[version];\n  },\n  /**\n   * @api private\n   */\n  getLatestServiceVersion: function getLatestServiceVersion(version) {\n    if (!this.constructor.services || this.constructor.services.length === 0) {\n      throw new Error('No services defined on ' + this.constructor.serviceIdentifier);\n    }\n    if (!version) {\n      version = 'latest';\n    } else if (AWS.util.isType(version, Date)) {\n      version = AWS.util.date.iso8601(version).split('T')[0];\n    }\n    if (Object.hasOwnProperty(this.constructor.services, version)) {\n      return version;\n    }\n    var keys = Object.keys(this.constructor.services).sort();\n    var selectedVersion = null;\n    for (var i = keys.length - 1; i >= 0; i--) {\n      // versions that end in \"*\" are not available on disk and can be\n      // skipped, so do not choose these as selectedVersions\n      if (keys[i][keys[i].length - 1] !== '*') {\n        selectedVersion = keys[i];\n      }\n      if (keys[i].substr(0, 10) <= version) {\n        return selectedVersion;\n      }\n    }\n    throw new Error('Could not find ' + this.constructor.serviceIdentifier + ' API to satisfy version constraint `' + version + '\\'');\n  },\n  /**\n   * @api private\n   */\n  api: {},\n  /**\n   * @api private\n   */\n  defaultRetryCount: 3,\n  /**\n   * @api private\n   */\n  customizeRequests: function customizeRequests(callback) {\n    if (!callback) {\n      this.customRequestHandler = null;\n    } else if (typeof callback === 'function') {\n      this.customRequestHandler = callback;\n    } else {\n      throw new Error('Invalid callback type \\'' + typeof callback + '\\' provided in customizeRequests');\n    }\n  },\n  /**\n   * Calls an operation on a service with the given input parameters.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeRequest: function makeRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n    params = params || {};\n    if (this.config.params) {\n      // copy only toplevel bound params\n      var rules = this.api.operations[operation];\n      if (rules) {\n        params = AWS.util.copy(params);\n        AWS.util.each(this.config.params, function (key, value) {\n          if (rules.input.members[key]) {\n            if (params[key] === undefined || params[key] === null) {\n              params[key] = value;\n            }\n          }\n        });\n      }\n    }\n    var request = new AWS.Request(this, operation, params);\n    this.addAllRequestListeners(request);\n    if (callback) request.send(callback);\n    return request;\n  },\n  /**\n   * Calls an operation on a service with the given input parameters, without\n   * any authentication data. This method is useful for \"public\" API operations.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeUnauthenticatedRequest: function makeUnauthenticatedRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n    var request = this.makeRequest(operation, params).toUnauthenticated();\n    return callback ? request.send(callback) : request;\n  },\n  /**\n   * Waits for a given state\n   *\n   * @param state [String] the state on the service to wait for\n   * @param params [map] a map of parameters to pass with each request\n   * @option params $waiter [map] a map of configuration options for the waiter\n   * @option params $waiter.delay [Number] The number of seconds to wait between\n   *                                       requests\n   * @option params $waiter.maxAttempts [Number] The maximum number of requests\n   *                                             to send while waiting\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  waitFor: function waitFor(state, params, callback) {\n    var waiter = new AWS.ResourceWaiter(this, state);\n    return waiter.wait(params, callback);\n  },\n  /**\n   * @api private\n   */\n  addAllRequestListeners: function addAllRequestListeners(request) {\n    var list = [AWS.events, AWS.EventListeners.Core, this.serviceInterface(), AWS.EventListeners.CorePost];\n    for (var i = 0; i < list.length; i++) {\n      if (list[i]) request.addListeners(list[i]);\n    }\n\n    // disable parameter validation\n    if (!this.config.paramValidation) {\n      request.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    }\n    if (this.config.logger) {\n      // add logging events\n      request.addListeners(AWS.EventListeners.Logger);\n    }\n    this.setupRequestListeners(request);\n    // call prototype's customRequestHandler\n    if (typeof this.constructor.prototype.customRequestHandler === 'function') {\n      this.constructor.prototype.customRequestHandler(request);\n    }\n    // call instance's customRequestHandler\n    if (Object.prototype.hasOwnProperty.call(this, 'customRequestHandler') && typeof this.customRequestHandler === 'function') {\n      this.customRequestHandler(request);\n    }\n  },\n  /**\n   * Override this method to setup any custom request listeners for each\n   * new request to the service.\n   *\n   * @abstract\n   */\n  setupRequestListeners: function setupRequestListeners() {},\n  /**\n   * Gets the signer class for a given request\n   * @api private\n   */\n  getSignerClass: function getSignerClass(request) {\n    var version;\n    // get operation authtype if present\n    var operation = null;\n    var authtype = '';\n    if (request) {\n      var operations = request.service.api.operations || {};\n      operation = operations[request.operation] || null;\n      authtype = operation ? operation.authtype : '';\n    }\n    if (this.config.signatureVersion) {\n      version = this.config.signatureVersion;\n    } else if (authtype === 'v4' || authtype === 'v4-unsigned-body') {\n      version = 'v4';\n    } else {\n      version = this.api.signatureVersion;\n    }\n    return AWS.Signers.RequestSigner.getVersion(version);\n  },\n  /**\n   * @api private\n   */\n  serviceInterface: function serviceInterface() {\n    switch (this.api.protocol) {\n      case 'ec2':\n        return AWS.EventListeners.Query;\n      case 'query':\n        return AWS.EventListeners.Query;\n      case 'json':\n        return AWS.EventListeners.Json;\n      case 'rest-json':\n        return AWS.EventListeners.RestJson;\n      case 'rest-xml':\n        return AWS.EventListeners.RestXml;\n    }\n    if (this.api.protocol) {\n      throw new Error('Invalid service `protocol\\' ' + this.api.protocol + ' in API config');\n    }\n  },\n  /**\n   * @api private\n   */\n  successfulResponse: function successfulResponse(resp) {\n    return resp.httpResponse.statusCode < 300;\n  },\n  /**\n   * How many times a failed request should be retried before giving up.\n   * the defaultRetryCount can be overriden by service classes.\n   *\n   * @api private\n   */\n  numRetries: function numRetries() {\n    if (this.config.maxRetries !== undefined) {\n      return this.config.maxRetries;\n    } else {\n      return this.defaultRetryCount;\n    }\n  },\n  /**\n   * @api private\n   */\n  retryDelays: function retryDelays(retryCount) {\n    return AWS.util.calculateRetryDelay(retryCount, this.config.retryDelayOptions);\n  },\n  /**\n   * @api private\n   */\n  retryableError: function retryableError(error) {\n    if (this.networkingError(error)) return true;\n    if (this.expiredCredentialsError(error)) return true;\n    if (this.throttledError(error)) return true;\n    if (error.statusCode >= 500) return true;\n    return false;\n  },\n  /**\n   * @api private\n   */\n  networkingError: function networkingError(error) {\n    return error.code === 'NetworkingError';\n  },\n  /**\n   * @api private\n   */\n  expiredCredentialsError: function expiredCredentialsError(error) {\n    // TODO : this only handles *one* of the expired credential codes\n    return error.code === 'ExpiredTokenException';\n  },\n  /**\n   * @api private\n   */\n  clockSkewError: function clockSkewError(error) {\n    switch (error.code) {\n      case 'RequestTimeTooSkewed':\n      case 'RequestExpired':\n      case 'InvalidSignatureException':\n      case 'SignatureDoesNotMatch':\n      case 'AuthFailure':\n      case 'RequestInTheFuture':\n        return true;\n      default:\n        return false;\n    }\n  },\n  /**\n   * @api private\n   */\n  throttledError: function throttledError(error) {\n    // this logic varies between services\n    switch (error.code) {\n      case 'ProvisionedThroughputExceededException':\n      case 'Throttling':\n      case 'ThrottlingException':\n      case 'RequestLimitExceeded':\n      case 'RequestThrottled':\n        return true;\n      default:\n        return false;\n    }\n  },\n  /**\n   * @api private\n   */\n  endpointFromTemplate: function endpointFromTemplate(endpoint) {\n    if (typeof endpoint !== 'string') return endpoint;\n    var e = endpoint;\n    e = e.replace(/\\{service\\}/g, this.api.endpointPrefix);\n    e = e.replace(/\\{region\\}/g, this.config.region);\n    e = e.replace(/\\{scheme\\}/g, this.config.sslEnabled ? 'https' : 'http');\n    return e;\n  },\n  /**\n   * @api private\n   */\n  setEndpoint: function setEndpoint(endpoint) {\n    this.endpoint = new AWS.Endpoint(endpoint, this.config);\n  },\n  /**\n   * @api private\n   */\n  paginationConfig: function paginationConfig(operation, throwException) {\n    var paginator = this.api.operations[operation].paginator;\n    if (!paginator) {\n      if (throwException) {\n        var e = new Error();\n        throw AWS.util.error(e, 'No pagination configuration for ' + operation);\n      }\n      return null;\n    }\n    return paginator;\n  }\n});\nAWS.util.update(AWS.Service, {\n  /**\n   * Adds one method for each operation described in the api configuration\n   *\n   * @api private\n   */\n  defineMethods: function defineMethods(svc) {\n    AWS.util.each(svc.prototype.api.operations, function iterator(method) {\n      if (svc.prototype[method]) return;\n      var operation = svc.prototype.api.operations[method];\n      if (operation.authtype === 'none') {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeUnauthenticatedRequest(method, params, callback);\n        };\n      } else {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeRequest(method, params, callback);\n        };\n      }\n    });\n  },\n  /**\n   * Defines a new Service class using a service identifier and list of versions\n   * including an optional set of features (functions) to apply to the class\n   * prototype.\n   *\n   * @param serviceIdentifier [String] the identifier for the service\n   * @param versions [Array<String>] a list of versions that work with this\n   *   service\n   * @param features [Object] an object to attach to the prototype\n   * @return [Class<Service>] the service class defined by this function.\n   */\n  defineService: function defineService(serviceIdentifier, versions, features) {\n    AWS.Service._serviceMap[serviceIdentifier] = true;\n    if (!Array.isArray(versions)) {\n      features = versions;\n      versions = [];\n    }\n    var svc = inherit(AWS.Service, features || {});\n    if (typeof serviceIdentifier === 'string') {\n      AWS.Service.addVersions(svc, versions);\n      var identifier = svc.serviceIdentifier || serviceIdentifier;\n      svc.serviceIdentifier = identifier;\n    } else {\n      // defineService called with an API\n      svc.prototype.api = serviceIdentifier;\n      AWS.Service.defineMethods(svc);\n    }\n    return svc;\n  },\n  /**\n   * @api private\n   */\n  addVersions: function addVersions(svc, versions) {\n    if (!Array.isArray(versions)) versions = [versions];\n    svc.services = svc.services || {};\n    for (var i = 0; i < versions.length; i++) {\n      if (svc.services[versions[i]] === undefined) {\n        svc.services[versions[i]] = null;\n      }\n    }\n    svc.apiVersions = Object.keys(svc.services).sort();\n  },\n  /**\n   * @api private\n   */\n  defineServiceApi: function defineServiceApi(superclass, version, apiConfig) {\n    var svc = inherit(superclass, {\n      serviceIdentifier: superclass.serviceIdentifier\n    });\n    function setApi(api) {\n      if (api.isApi) {\n        svc.prototype.api = api;\n      } else {\n        svc.prototype.api = new Api(api);\n      }\n    }\n    if (typeof version === 'string') {\n      if (apiConfig) {\n        setApi(apiConfig);\n      } else {\n        try {\n          setApi(AWS.apiLoader(superclass.serviceIdentifier, version));\n        } catch (err) {\n          throw AWS.util.error(err, {\n            message: 'Could not find API configuration ' + superclass.serviceIdentifier + '-' + version\n          });\n        }\n      }\n      if (!Object.prototype.hasOwnProperty.call(superclass.services, version)) {\n        superclass.apiVersions = superclass.apiVersions.concat(version).sort();\n      }\n      superclass.services[version] = svc;\n    } else {\n      setApi(version);\n    }\n    AWS.Service.defineMethods(svc);\n    return svc;\n  },\n  /**\n   * @api private\n   */\n  hasService: function (identifier) {\n    return Object.prototype.hasOwnProperty.call(AWS.Service._serviceMap, identifier);\n  },\n  /**\n   * @api private\n   */\n  _serviceMap: {}\n});\nmodule.exports = AWS.Service;","map":{"version":3,"names":["AWS","require","Api","regionConfig","inherit","util","clientCount","Service","constructor","config","loadServiceClass","error","Error","ServiceClass","originalConfig","copy","svc","Object","defineProperty","get","enumerable","configurable","_clientId","initialize","svcConfig","serviceIdentifier","Config","update","validateService","endpoint","endpointFromTemplate","setEndpoint","serviceConfig","isEmpty","api","apiConfig","defineServiceApi","services","version","apiVersions","apiVersion","getLatestServiceClass","getLatestServiceVersion","length","isType","Date","date","iso8601","split","hasOwnProperty","keys","sort","selectedVersion","i","substr","defaultRetryCount","customizeRequests","callback","customRequestHandler","makeRequest","operation","params","rules","operations","each","key","value","input","members","undefined","request","Request","addAllRequestListeners","send","makeUnauthenticatedRequest","toUnauthenticated","waitFor","state","waiter","ResourceWaiter","wait","list","events","EventListeners","Core","serviceInterface","CorePost","addListeners","paramValidation","removeListener","VALIDATE_PARAMETERS","logger","Logger","setupRequestListeners","prototype","call","getSignerClass","authtype","service","signatureVersion","Signers","RequestSigner","getVersion","protocol","Query","Json","RestJson","RestXml","successfulResponse","resp","httpResponse","statusCode","numRetries","maxRetries","retryDelays","retryCount","calculateRetryDelay","retryDelayOptions","retryableError","networkingError","expiredCredentialsError","throttledError","code","clockSkewError","e","replace","endpointPrefix","region","sslEnabled","Endpoint","paginationConfig","throwException","paginator","defineMethods","iterator","method","defineService","versions","features","_serviceMap","Array","isArray","addVersions","identifier","superclass","setApi","isApi","apiLoader","err","message","concat","hasService","module","exports"],"sources":["/Users/luminosity/Desktop/Fovus/node_modules/aws-sdk/lib/service.js"],"sourcesContent":["var AWS = require('./core');\nvar Api = require('./model/api');\nvar regionConfig = require('./region_config');\nvar inherit = AWS.util.inherit;\nvar clientCount = 0;\n\n/**\n * The service class representing an AWS service.\n *\n * @abstract\n *\n * @!attribute apiVersions\n *   @return [Array<String>] the list of API versions supported by this service.\n *   @readonly\n */\nAWS.Service = inherit({\n  /**\n   * Create a new service object with a configuration object\n   *\n   * @param config [map] a map of configuration options\n   */\n  constructor: function Service(config) {\n    if (!this.loadServiceClass) {\n      throw AWS.util.error(new Error(),\n        'Service must be constructed with `new\\' operator');\n    }\n    var ServiceClass = this.loadServiceClass(config || {});\n    if (ServiceClass) {\n      var originalConfig = AWS.util.copy(config);\n      var svc = new ServiceClass(config);\n      Object.defineProperty(svc, '_originalConfig', {\n        get: function() { return originalConfig; },\n        enumerable: false,\n        configurable: true\n      });\n      svc._clientId = ++clientCount;\n      return svc;\n    }\n    this.initialize(config);\n  },\n\n  /**\n   * @api private\n   */\n  initialize: function initialize(config) {\n    var svcConfig = AWS.config[this.serviceIdentifier];\n\n    this.config = new AWS.Config(AWS.config);\n    if (svcConfig) this.config.update(svcConfig, true);\n    if (config) this.config.update(config, true);\n\n    this.validateService();\n    if (!this.config.endpoint) regionConfig(this);\n\n    this.config.endpoint = this.endpointFromTemplate(this.config.endpoint);\n    this.setEndpoint(this.config.endpoint);\n  },\n\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n  },\n\n  /**\n   * @api private\n   */\n  loadServiceClass: function loadServiceClass(serviceConfig) {\n    var config = serviceConfig;\n    if (!AWS.util.isEmpty(this.api)) {\n      return null;\n    } else if (config.apiConfig) {\n      return AWS.Service.defineServiceApi(this.constructor, config.apiConfig);\n    } else if (!this.constructor.services) {\n      return null;\n    } else {\n      config = new AWS.Config(AWS.config);\n      config.update(serviceConfig, true);\n      var version = config.apiVersions[this.constructor.serviceIdentifier];\n      version = version || config.apiVersion;\n      return this.getLatestServiceClass(version);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceClass: function getLatestServiceClass(version) {\n    version = this.getLatestServiceVersion(version);\n    if (this.constructor.services[version] === null) {\n      AWS.Service.defineServiceApi(this.constructor, version);\n    }\n\n    return this.constructor.services[version];\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceVersion: function getLatestServiceVersion(version) {\n    if (!this.constructor.services || this.constructor.services.length === 0) {\n      throw new Error('No services defined on ' +\n                      this.constructor.serviceIdentifier);\n    }\n\n    if (!version) {\n      version = 'latest';\n    } else if (AWS.util.isType(version, Date)) {\n      version = AWS.util.date.iso8601(version).split('T')[0];\n    }\n\n    if (Object.hasOwnProperty(this.constructor.services, version)) {\n      return version;\n    }\n\n    var keys = Object.keys(this.constructor.services).sort();\n    var selectedVersion = null;\n    for (var i = keys.length - 1; i >= 0; i--) {\n      // versions that end in \"*\" are not available on disk and can be\n      // skipped, so do not choose these as selectedVersions\n      if (keys[i][keys[i].length - 1] !== '*') {\n        selectedVersion = keys[i];\n      }\n      if (keys[i].substr(0, 10) <= version) {\n        return selectedVersion;\n      }\n    }\n\n    throw new Error('Could not find ' + this.constructor.serviceIdentifier +\n                    ' API to satisfy version constraint `' + version + '\\'');\n  },\n\n  /**\n   * @api private\n   */\n  api: {},\n\n  /**\n   * @api private\n   */\n  defaultRetryCount: 3,\n\n  /**\n   * @api private\n   */\n  customizeRequests: function customizeRequests(callback) {\n    if (!callback) {\n      this.customRequestHandler = null;\n    } else if (typeof callback === 'function') {\n      this.customRequestHandler = callback;\n    } else {\n      throw new Error('Invalid callback type \\'' + typeof callback + '\\' provided in customizeRequests');\n    }\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeRequest: function makeRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n\n    params = params || {};\n    if (this.config.params) { // copy only toplevel bound params\n      var rules = this.api.operations[operation];\n      if (rules) {\n        params = AWS.util.copy(params);\n        AWS.util.each(this.config.params, function(key, value) {\n          if (rules.input.members[key]) {\n            if (params[key] === undefined || params[key] === null) {\n              params[key] = value;\n            }\n          }\n        });\n      }\n    }\n\n    var request = new AWS.Request(this, operation, params);\n    this.addAllRequestListeners(request);\n\n    if (callback) request.send(callback);\n    return request;\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters, without\n   * any authentication data. This method is useful for \"public\" API operations.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeUnauthenticatedRequest: function makeUnauthenticatedRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n\n    var request = this.makeRequest(operation, params).toUnauthenticated();\n    return callback ? request.send(callback) : request;\n  },\n\n  /**\n   * Waits for a given state\n   *\n   * @param state [String] the state on the service to wait for\n   * @param params [map] a map of parameters to pass with each request\n   * @option params $waiter [map] a map of configuration options for the waiter\n   * @option params $waiter.delay [Number] The number of seconds to wait between\n   *                                       requests\n   * @option params $waiter.maxAttempts [Number] The maximum number of requests\n   *                                             to send while waiting\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  waitFor: function waitFor(state, params, callback) {\n    var waiter = new AWS.ResourceWaiter(this, state);\n    return waiter.wait(params, callback);\n  },\n\n  /**\n   * @api private\n   */\n  addAllRequestListeners: function addAllRequestListeners(request) {\n    var list = [AWS.events, AWS.EventListeners.Core, this.serviceInterface(),\n                AWS.EventListeners.CorePost];\n    for (var i = 0; i < list.length; i++) {\n      if (list[i]) request.addListeners(list[i]);\n    }\n\n    // disable parameter validation\n    if (!this.config.paramValidation) {\n      request.removeListener('validate',\n        AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    }\n\n    if (this.config.logger) { // add logging events\n      request.addListeners(AWS.EventListeners.Logger);\n    }\n\n    this.setupRequestListeners(request);\n    // call prototype's customRequestHandler\n    if (typeof this.constructor.prototype.customRequestHandler === 'function') {\n      this.constructor.prototype.customRequestHandler(request);\n    }\n    // call instance's customRequestHandler\n    if (Object.prototype.hasOwnProperty.call(this, 'customRequestHandler') && typeof this.customRequestHandler === 'function') {\n      this.customRequestHandler(request);\n    }\n  },\n\n  /**\n   * Override this method to setup any custom request listeners for each\n   * new request to the service.\n   *\n   * @abstract\n   */\n  setupRequestListeners: function setupRequestListeners() {\n  },\n\n  /**\n   * Gets the signer class for a given request\n   * @api private\n   */\n  getSignerClass: function getSignerClass(request) {\n    var version;\n    // get operation authtype if present\n    var operation = null;\n    var authtype = '';\n    if (request) {\n      var operations = request.service.api.operations || {};\n      operation = operations[request.operation] || null;\n      authtype = operation ? operation.authtype : '';\n    }\n    if (this.config.signatureVersion) {\n      version = this.config.signatureVersion;\n    } else if (authtype === 'v4' || authtype === 'v4-unsigned-body') {\n      version = 'v4';\n    } else {\n      version = this.api.signatureVersion;\n    }\n    return AWS.Signers.RequestSigner.getVersion(version);\n  },\n\n  /**\n   * @api private\n   */\n  serviceInterface: function serviceInterface() {\n    switch (this.api.protocol) {\n      case 'ec2': return AWS.EventListeners.Query;\n      case 'query': return AWS.EventListeners.Query;\n      case 'json': return AWS.EventListeners.Json;\n      case 'rest-json': return AWS.EventListeners.RestJson;\n      case 'rest-xml': return AWS.EventListeners.RestXml;\n    }\n    if (this.api.protocol) {\n      throw new Error('Invalid service `protocol\\' ' +\n        this.api.protocol + ' in API config');\n    }\n  },\n\n  /**\n   * @api private\n   */\n  successfulResponse: function successfulResponse(resp) {\n    return resp.httpResponse.statusCode < 300;\n  },\n\n  /**\n   * How many times a failed request should be retried before giving up.\n   * the defaultRetryCount can be overriden by service classes.\n   *\n   * @api private\n   */\n  numRetries: function numRetries() {\n    if (this.config.maxRetries !== undefined) {\n      return this.config.maxRetries;\n    } else {\n      return this.defaultRetryCount;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  retryDelays: function retryDelays(retryCount) {\n    return AWS.util.calculateRetryDelay(retryCount, this.config.retryDelayOptions);\n  },\n\n  /**\n   * @api private\n   */\n  retryableError: function retryableError(error) {\n    if (this.networkingError(error)) return true;\n    if (this.expiredCredentialsError(error)) return true;\n    if (this.throttledError(error)) return true;\n    if (error.statusCode >= 500) return true;\n    return false;\n  },\n\n  /**\n   * @api private\n   */\n  networkingError: function networkingError(error) {\n    return error.code === 'NetworkingError';\n  },\n\n  /**\n   * @api private\n   */\n  expiredCredentialsError: function expiredCredentialsError(error) {\n    // TODO : this only handles *one* of the expired credential codes\n    return (error.code === 'ExpiredTokenException');\n  },\n\n  /**\n   * @api private\n   */\n  clockSkewError: function clockSkewError(error) {\n    switch (error.code) {\n      case 'RequestTimeTooSkewed':\n      case 'RequestExpired':\n      case 'InvalidSignatureException':\n      case 'SignatureDoesNotMatch':\n      case 'AuthFailure':\n      case 'RequestInTheFuture':\n        return true;\n      default: return false;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  throttledError: function throttledError(error) {\n    // this logic varies between services\n    switch (error.code) {\n      case 'ProvisionedThroughputExceededException':\n      case 'Throttling':\n      case 'ThrottlingException':\n      case 'RequestLimitExceeded':\n      case 'RequestThrottled':\n        return true;\n      default:\n        return false;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  endpointFromTemplate: function endpointFromTemplate(endpoint) {\n    if (typeof endpoint !== 'string') return endpoint;\n\n    var e = endpoint;\n    e = e.replace(/\\{service\\}/g, this.api.endpointPrefix);\n    e = e.replace(/\\{region\\}/g, this.config.region);\n    e = e.replace(/\\{scheme\\}/g, this.config.sslEnabled ? 'https' : 'http');\n    return e;\n  },\n\n  /**\n   * @api private\n   */\n  setEndpoint: function setEndpoint(endpoint) {\n    this.endpoint = new AWS.Endpoint(endpoint, this.config);\n  },\n\n  /**\n   * @api private\n   */\n  paginationConfig: function paginationConfig(operation, throwException) {\n    var paginator = this.api.operations[operation].paginator;\n    if (!paginator) {\n      if (throwException) {\n        var e = new Error();\n        throw AWS.util.error(e, 'No pagination configuration for ' + operation);\n      }\n      return null;\n    }\n\n    return paginator;\n  }\n});\n\nAWS.util.update(AWS.Service, {\n\n  /**\n   * Adds one method for each operation described in the api configuration\n   *\n   * @api private\n   */\n  defineMethods: function defineMethods(svc) {\n    AWS.util.each(svc.prototype.api.operations, function iterator(method) {\n      if (svc.prototype[method]) return;\n      var operation = svc.prototype.api.operations[method];\n      if (operation.authtype === 'none') {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeUnauthenticatedRequest(method, params, callback);\n        };\n      } else {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeRequest(method, params, callback);\n        };\n      }\n    });\n  },\n\n  /**\n   * Defines a new Service class using a service identifier and list of versions\n   * including an optional set of features (functions) to apply to the class\n   * prototype.\n   *\n   * @param serviceIdentifier [String] the identifier for the service\n   * @param versions [Array<String>] a list of versions that work with this\n   *   service\n   * @param features [Object] an object to attach to the prototype\n   * @return [Class<Service>] the service class defined by this function.\n   */\n  defineService: function defineService(serviceIdentifier, versions, features) {\n    AWS.Service._serviceMap[serviceIdentifier] = true;\n    if (!Array.isArray(versions)) {\n      features = versions;\n      versions = [];\n    }\n\n    var svc = inherit(AWS.Service, features || {});\n\n    if (typeof serviceIdentifier === 'string') {\n      AWS.Service.addVersions(svc, versions);\n\n      var identifier = svc.serviceIdentifier || serviceIdentifier;\n      svc.serviceIdentifier = identifier;\n    } else { // defineService called with an API\n      svc.prototype.api = serviceIdentifier;\n      AWS.Service.defineMethods(svc);\n    }\n\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  addVersions: function addVersions(svc, versions) {\n    if (!Array.isArray(versions)) versions = [versions];\n\n    svc.services = svc.services || {};\n    for (var i = 0; i < versions.length; i++) {\n      if (svc.services[versions[i]] === undefined) {\n        svc.services[versions[i]] = null;\n      }\n    }\n\n    svc.apiVersions = Object.keys(svc.services).sort();\n  },\n\n  /**\n   * @api private\n   */\n  defineServiceApi: function defineServiceApi(superclass, version, apiConfig) {\n    var svc = inherit(superclass, {\n      serviceIdentifier: superclass.serviceIdentifier\n    });\n\n    function setApi(api) {\n      if (api.isApi) {\n        svc.prototype.api = api;\n      } else {\n        svc.prototype.api = new Api(api);\n      }\n    }\n\n    if (typeof version === 'string') {\n      if (apiConfig) {\n        setApi(apiConfig);\n      } else {\n        try {\n          setApi(AWS.apiLoader(superclass.serviceIdentifier, version));\n        } catch (err) {\n          throw AWS.util.error(err, {\n            message: 'Could not find API configuration ' +\n              superclass.serviceIdentifier + '-' + version\n          });\n        }\n      }\n      if (!Object.prototype.hasOwnProperty.call(superclass.services, version)) {\n        superclass.apiVersions = superclass.apiVersions.concat(version).sort();\n      }\n      superclass.services[version] = svc;\n    } else {\n      setApi(version);\n    }\n\n    AWS.Service.defineMethods(svc);\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  hasService: function(identifier) {\n    return Object.prototype.hasOwnProperty.call(AWS.Service._serviceMap, identifier);\n  },\n\n  /**\n   * @api private\n   */\n  _serviceMap: {}\n});\n\nmodule.exports = AWS.Service;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}