{"ast":null,"code":"import { escapeAttribute } from \"./escape-attribute\";\nimport { XmlText } from \"./XmlText\";\nexport class XmlNode {\n  constructor(name) {\n    let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    this.name = name;\n    this.children = children;\n    this.attributes = {};\n  }\n  static of(name, childText, withName) {\n    const node = new XmlNode(name);\n    if (childText !== undefined) {\n      node.addChildNode(new XmlText(childText));\n    }\n    if (withName !== undefined) {\n      node.withName(withName);\n    }\n    return node;\n  }\n  withName(name) {\n    this.name = name;\n    return this;\n  }\n  addAttribute(name, value) {\n    this.attributes[name] = value;\n    return this;\n  }\n  addChildNode(child) {\n    this.children.push(child);\n    return this;\n  }\n  removeAttribute(name) {\n    delete this.attributes[name];\n    return this;\n  }\n  toString() {\n    const hasChildren = Boolean(this.children.length);\n    let xmlText = `<${this.name}`;\n    const attributes = this.attributes;\n    for (const attributeName of Object.keys(attributes)) {\n      const attribute = attributes[attributeName];\n      if (typeof attribute !== \"undefined\" && attribute !== null) {\n        xmlText += ` ${attributeName}=\"${escapeAttribute(\"\" + attribute)}\"`;\n      }\n    }\n    return xmlText += !hasChildren ? \"/>\" : `>${this.children.map(c => c.toString()).join(\"\")}</${this.name}>`;\n  }\n}","map":{"version":3,"names":["escapeAttribute","XmlText","XmlNode","constructor","name","children","attributes","of","childText","withName","node","undefined","addChildNode","addAttribute","value","child","push","removeAttribute","toString","hasChildren","Boolean","length","xmlText","attributeName","Object","keys","attribute","map","c","join"],"sources":["/Users/luminosity/Desktop/Fovus/node_modules/@aws-sdk/xml-builder/dist-es/XmlNode.js"],"sourcesContent":["import { escapeAttribute } from \"./escape-attribute\";\nimport { XmlText } from \"./XmlText\";\nexport class XmlNode {\n    constructor(name, children = []) {\n        this.name = name;\n        this.children = children;\n        this.attributes = {};\n    }\n    static of(name, childText, withName) {\n        const node = new XmlNode(name);\n        if (childText !== undefined) {\n            node.addChildNode(new XmlText(childText));\n        }\n        if (withName !== undefined) {\n            node.withName(withName);\n        }\n        return node;\n    }\n    withName(name) {\n        this.name = name;\n        return this;\n    }\n    addAttribute(name, value) {\n        this.attributes[name] = value;\n        return this;\n    }\n    addChildNode(child) {\n        this.children.push(child);\n        return this;\n    }\n    removeAttribute(name) {\n        delete this.attributes[name];\n        return this;\n    }\n    toString() {\n        const hasChildren = Boolean(this.children.length);\n        let xmlText = `<${this.name}`;\n        const attributes = this.attributes;\n        for (const attributeName of Object.keys(attributes)) {\n            const attribute = attributes[attributeName];\n            if (typeof attribute !== \"undefined\" && attribute !== null) {\n                xmlText += ` ${attributeName}=\"${escapeAttribute(\"\" + attribute)}\"`;\n            }\n        }\n        return (xmlText += !hasChildren ? \"/>\" : `>${this.children.map((c) => c.toString()).join(\"\")}</${this.name}>`);\n    }\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,oBAAoB;AACpD,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAO,MAAMC,OAAO,CAAC;EACjBC,WAAW,CAACC,IAAI,EAAiB;IAAA,IAAfC,QAAQ,uEAAG,EAAE;IAC3B,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC;EACxB;EACA,OAAOC,EAAE,CAACH,IAAI,EAAEI,SAAS,EAAEC,QAAQ,EAAE;IACjC,MAAMC,IAAI,GAAG,IAAIR,OAAO,CAACE,IAAI,CAAC;IAC9B,IAAII,SAAS,KAAKG,SAAS,EAAE;MACzBD,IAAI,CAACE,YAAY,CAAC,IAAIX,OAAO,CAACO,SAAS,CAAC,CAAC;IAC7C;IACA,IAAIC,QAAQ,KAAKE,SAAS,EAAE;MACxBD,IAAI,CAACD,QAAQ,CAACA,QAAQ,CAAC;IAC3B;IACA,OAAOC,IAAI;EACf;EACAD,QAAQ,CAACL,IAAI,EAAE;IACX,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,OAAO,IAAI;EACf;EACAS,YAAY,CAACT,IAAI,EAAEU,KAAK,EAAE;IACtB,IAAI,CAACR,UAAU,CAACF,IAAI,CAAC,GAAGU,KAAK;IAC7B,OAAO,IAAI;EACf;EACAF,YAAY,CAACG,KAAK,EAAE;IAChB,IAAI,CAACV,QAAQ,CAACW,IAAI,CAACD,KAAK,CAAC;IACzB,OAAO,IAAI;EACf;EACAE,eAAe,CAACb,IAAI,EAAE;IAClB,OAAO,IAAI,CAACE,UAAU,CAACF,IAAI,CAAC;IAC5B,OAAO,IAAI;EACf;EACAc,QAAQ,GAAG;IACP,MAAMC,WAAW,GAAGC,OAAO,CAAC,IAAI,CAACf,QAAQ,CAACgB,MAAM,CAAC;IACjD,IAAIC,OAAO,GAAI,IAAG,IAAI,CAAClB,IAAK,EAAC;IAC7B,MAAME,UAAU,GAAG,IAAI,CAACA,UAAU;IAClC,KAAK,MAAMiB,aAAa,IAAIC,MAAM,CAACC,IAAI,CAACnB,UAAU,CAAC,EAAE;MACjD,MAAMoB,SAAS,GAAGpB,UAAU,CAACiB,aAAa,CAAC;MAC3C,IAAI,OAAOG,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK,IAAI,EAAE;QACxDJ,OAAO,IAAK,IAAGC,aAAc,KAAIvB,eAAe,CAAC,EAAE,GAAG0B,SAAS,CAAE,GAAE;MACvE;IACJ;IACA,OAAQJ,OAAO,IAAI,CAACH,WAAW,GAAG,IAAI,GAAI,IAAG,IAAI,CAACd,QAAQ,CAACsB,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACV,QAAQ,EAAE,CAAC,CAACW,IAAI,CAAC,EAAE,CAAE,KAAI,IAAI,CAACzB,IAAK,GAAE;EACjH;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}