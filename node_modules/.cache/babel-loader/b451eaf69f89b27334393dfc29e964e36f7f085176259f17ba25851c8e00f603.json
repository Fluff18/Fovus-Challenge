{"ast":null,"code":"var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nfunction signedUrlBuilder(request) {\n  var expires = request.httpRequest.headers[expiresHeader];\n  var signerClass = request.service.getSignerClass(request);\n  delete request.httpRequest.headers['User-Agent'];\n  delete request.httpRequest.headers['X-Amz-User-Agent'];\n  if (signerClass === AWS.Signers.V4) {\n    if (expires > 604800) {\n      // one week expiry is invalid\n      var message = 'Presigning does not support expiry time greater ' + 'than a week with SigV4 signing.';\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidExpiryTime',\n        message: message,\n        retryable: false\n      });\n    }\n    request.httpRequest.headers[expiresHeader] = expires;\n  } else if (signerClass === AWS.Signers.S3) {\n    request.httpRequest.headers[expiresHeader] = parseInt(AWS.util.date.unixTimestamp() + expires, 10).toString();\n  } else {\n    throw AWS.util.error(new Error(), {\n      message: 'Presigning only supports S3 or SigV4 signing.',\n      code: 'UnsupportedSigner',\n      retryable: false\n    });\n  }\n}\n\n/**\n * @api private\n */\nfunction signedUrlSigner(request) {\n  var endpoint = request.httpRequest.endpoint;\n  var parsedUrl = AWS.util.urlParse(request.httpRequest.path);\n  var queryParams = {};\n  if (parsedUrl.search) {\n    queryParams = AWS.util.queryStringParse(parsedUrl.search.substr(1));\n  }\n  AWS.util.each(request.httpRequest.headers, function (key, value) {\n    if (key === expiresHeader) key = 'Expires';\n    if (key.indexOf('x-amz-meta-') === 0) {\n      // Delete existing, potentially not normalized key\n      delete queryParams[key];\n      key = key.toLowerCase();\n    }\n    queryParams[key] = value;\n  });\n  delete request.httpRequest.headers[expiresHeader];\n  var auth = queryParams['Authorization'].split(' ');\n  if (auth[0] === 'AWS') {\n    auth = auth[1].split(':');\n    queryParams['AWSAccessKeyId'] = auth[0];\n    queryParams['Signature'] = auth[1];\n  } else if (auth[0] === 'AWS4-HMAC-SHA256') {\n    // SigV4 signing\n    auth.shift();\n    var rest = auth.join(' ');\n    var signature = rest.match(/Signature=(.*?)(?:,|\\s|\\r?\\n|$)/)[1];\n    queryParams['X-Amz-Signature'] = signature;\n    delete queryParams['Expires'];\n  }\n  delete queryParams['Authorization'];\n  delete queryParams['Host'];\n\n  // build URL\n  endpoint.pathname = parsedUrl.pathname;\n  endpoint.search = AWS.util.queryParamsToString(queryParams);\n}\n\n/**\n * @api private\n */\nAWS.Signers.Presign = inherit({\n  /**\n   * @api private\n   */\n  sign: function sign(request, expireTime, callback) {\n    request.httpRequest.headers[expiresHeader] = expireTime || 3600;\n    request.on('build', signedUrlBuilder);\n    request.on('sign', signedUrlSigner);\n    request.removeListener('afterBuild', AWS.EventListeners.Core.SET_CONTENT_LENGTH);\n    request.removeListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);\n    request.emit('beforePresign', [request]);\n    if (callback) {\n      request.build(function () {\n        if (this.response.error) callback(this.response.error);else {\n          callback(null, AWS.util.urlFormat(request.httpRequest.endpoint));\n        }\n      });\n    } else {\n      request.build();\n      if (request.response.error) throw request.response.error;\n      return AWS.util.urlFormat(request.httpRequest.endpoint);\n    }\n  }\n});\nmodule.exports = AWS.Signers.Presign;","map":{"version":3,"names":["AWS","require","inherit","util","expiresHeader","signedUrlBuilder","request","expires","httpRequest","headers","signerClass","service","getSignerClass","Signers","V4","message","error","Error","code","retryable","S3","parseInt","date","unixTimestamp","toString","signedUrlSigner","endpoint","parsedUrl","urlParse","path","queryParams","search","queryStringParse","substr","each","key","value","indexOf","toLowerCase","auth","split","shift","rest","join","signature","match","pathname","queryParamsToString","Presign","sign","expireTime","callback","on","removeListener","EventListeners","Core","SET_CONTENT_LENGTH","COMPUTE_SHA256","emit","build","response","urlFormat","module","exports"],"sources":["/Users/luminosity/Desktop/Fovus/node_modules/aws-sdk/lib/signers/presign.js"],"sourcesContent":["var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nfunction signedUrlBuilder(request) {\n  var expires = request.httpRequest.headers[expiresHeader];\n  var signerClass = request.service.getSignerClass(request);\n\n  delete request.httpRequest.headers['User-Agent'];\n  delete request.httpRequest.headers['X-Amz-User-Agent'];\n\n  if (signerClass === AWS.Signers.V4) {\n    if (expires > 604800) { // one week expiry is invalid\n      var message = 'Presigning does not support expiry time greater ' +\n                    'than a week with SigV4 signing.';\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidExpiryTime', message: message, retryable: false\n      });\n    }\n    request.httpRequest.headers[expiresHeader] = expires;\n  } else if (signerClass === AWS.Signers.S3) {\n    request.httpRequest.headers[expiresHeader] = parseInt(\n      AWS.util.date.unixTimestamp() + expires, 10).toString();\n  } else {\n    throw AWS.util.error(new Error(), {\n      message: 'Presigning only supports S3 or SigV4 signing.',\n      code: 'UnsupportedSigner', retryable: false\n    });\n  }\n}\n\n/**\n * @api private\n */\nfunction signedUrlSigner(request) {\n  var endpoint = request.httpRequest.endpoint;\n  var parsedUrl = AWS.util.urlParse(request.httpRequest.path);\n  var queryParams = {};\n\n  if (parsedUrl.search) {\n    queryParams = AWS.util.queryStringParse(parsedUrl.search.substr(1));\n  }\n\n  AWS.util.each(request.httpRequest.headers, function (key, value) {\n    if (key === expiresHeader) key = 'Expires';\n    if (key.indexOf('x-amz-meta-') === 0) {\n      // Delete existing, potentially not normalized key\n      delete queryParams[key];\n      key = key.toLowerCase();\n    }\n    queryParams[key] = value;\n  });\n  delete request.httpRequest.headers[expiresHeader];\n\n  var auth = queryParams['Authorization'].split(' ');\n  if (auth[0] === 'AWS') {\n    auth = auth[1].split(':');\n    queryParams['AWSAccessKeyId'] = auth[0];\n    queryParams['Signature'] = auth[1];\n  } else if (auth[0] === 'AWS4-HMAC-SHA256') { // SigV4 signing\n    auth.shift();\n    var rest = auth.join(' ');\n    var signature = rest.match(/Signature=(.*?)(?:,|\\s|\\r?\\n|$)/)[1];\n    queryParams['X-Amz-Signature'] = signature;\n    delete queryParams['Expires'];\n  }\n  delete queryParams['Authorization'];\n  delete queryParams['Host'];\n\n  // build URL\n  endpoint.pathname = parsedUrl.pathname;\n  endpoint.search = AWS.util.queryParamsToString(queryParams);\n}\n\n/**\n * @api private\n */\nAWS.Signers.Presign = inherit({\n  /**\n   * @api private\n   */\n  sign: function sign(request, expireTime, callback) {\n    request.httpRequest.headers[expiresHeader] = expireTime || 3600;\n    request.on('build', signedUrlBuilder);\n    request.on('sign', signedUrlSigner);\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.SET_CONTENT_LENGTH);\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.COMPUTE_SHA256);\n\n    request.emit('beforePresign', [request]);\n\n    if (callback) {\n      request.build(function() {\n        if (this.response.error) callback(this.response.error);\n        else {\n          callback(null, AWS.util.urlFormat(request.httpRequest.endpoint));\n        }\n      });\n    } else {\n      request.build();\n      if (request.response.error) throw request.response.error;\n      return AWS.util.urlFormat(request.httpRequest.endpoint);\n    }\n  }\n});\n\nmodule.exports = AWS.Signers.Presign;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}