{"ast":null,"code":"// Generated by CoffeeScript 1.9.1\n(function () {\n  var XMLDTDAttList, create;\n  create = require('lodash/create');\n  module.exports = XMLDTDAttList = function () {\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      this.stringify = parent.stringify;\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n    XMLDTDAttList.prototype.toString = function (options, level) {\n      var indent, newline, offset, pretty, r, ref, ref1, ref2, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (ref = options != null ? options.indent : void 0) != null ? ref : '  ';\n      offset = (ref1 = options != null ? options.offset : void 0) != null ? ref1 : 0;\n      newline = (ref2 = options != null ? options.newline : void 0) != null ? ref2 : '\\n';\n      level || (level = 0);\n      space = new Array(level + offset + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      r += '<!ATTLIST ' + this.elementName + ' ' + this.attributeName + ' ' + this.attributeType;\n      if (this.defaultValueType !== '#DEFAULT') {\n        r += ' ' + this.defaultValueType;\n      }\n      if (this.defaultValue) {\n        r += ' \"' + this.defaultValue + '\"';\n      }\n      r += '>';\n      if (pretty) {\n        r += newline;\n      }\n      return r;\n    };\n    return XMLDTDAttList;\n  }();\n}).call(this);","map":{"version":3,"names":["XMLDTDAttList","create","require","module","exports","parent","elementName","attributeName","attributeType","defaultValueType","defaultValue","stringify","Error","indexOf","match","eleName","attName","dtdAttType","dtdAttDefault","prototype","toString","options","level","indent","newline","offset","pretty","r","ref","ref1","ref2","space","Array","join","call"],"sources":["/Users/luminosity/Desktop/Fovus/node_modules/xmlbuilder/lib/XMLDTDAttList.js"],"sourcesContent":["// Generated by CoffeeScript 1.9.1\n(function() {\n  var XMLDTDAttList, create;\n\n  create = require('lodash/create');\n\n  module.exports = XMLDTDAttList = (function() {\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      this.stringify = parent.stringify;\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options, level) {\n      var indent, newline, offset, pretty, r, ref, ref1, ref2, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (ref = options != null ? options.indent : void 0) != null ? ref : '  ';\n      offset = (ref1 = options != null ? options.offset : void 0) != null ? ref1 : 0;\n      newline = (ref2 = options != null ? options.newline : void 0) != null ? ref2 : '\\n';\n      level || (level = 0);\n      space = new Array(level + offset + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      r += '<!ATTLIST ' + this.elementName + ' ' + this.attributeName + ' ' + this.attributeType;\n      if (this.defaultValueType !== '#DEFAULT') {\n        r += ' ' + this.defaultValueType;\n      }\n      if (this.defaultValue) {\n        r += ' \"' + this.defaultValue + '\"';\n      }\n      r += '>';\n      if (pretty) {\n        r += newline;\n      }\n      return r;\n    };\n\n    return XMLDTDAttList;\n\n  })();\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}